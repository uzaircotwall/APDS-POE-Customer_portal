{"ast":null,"code":"import axios from 'axios';\nconst api = axios.create({\n  baseURL: process.env.REACT_APP_API_URL || 'https://localhost:5000',\n  // Ensure HTTPS is set correctly\n  withCredentials: true // Allows cookies for cross-origin requests if needed\n});\n\n// User Authentication\nexport const loginUser = async (email, accountNumber, password) => {\n  try {\n    return await api.post('/api/auth/login', {\n      email,\n      accountNumber,\n      password\n    });\n  } catch (error) {\n    console.error('Login failed:', error);\n    throw error;\n  }\n};\nexport const registerUser = async (name, surname, idNumber, email, password) => {\n  try {\n    return await api.post('/api/auth/register', {\n      name,\n      surname,\n      idNumber,\n      email,\n      password\n    });\n  } catch (error) {\n    console.error('Registration failed:', error);\n    throw error;\n  }\n};\n\n// Customer Actions\nexport const createPayment = async (token, paymentData) => {\n  try {\n    return await api.post('/api/payments', paymentData, {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    });\n  } catch (error) {\n    console.error('Payment creation failed:', error);\n    throw error;\n  }\n};\nexport const getPaymentHistory = async token => {\n  try {\n    return await api.get('/api/payments/history', {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    });\n  } catch (error) {\n    console.error('Fetching payment history failed:', error);\n    throw error;\n  }\n};\n\n// Retrieve balance and transaction history\nexport const getBalanceAndTransactions = async token => {\n  try {\n    return await api.get('/api/user/balance', {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    });\n  } catch (error) {\n    console.error('Fetching balance and transactions failed:', error);\n    throw error;\n  }\n};\n\n// Admin Actions\nexport const getPendingPayments = async token => {\n  try {\n    return await api.get('/api/admin/payments', {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    });\n  } catch (error) {\n    console.error('Fetching pending payments failed:', error);\n    throw error;\n  }\n};\nexport const getUserProfile = async token => {\n  try {\n    return await api.get('/api/user/profile', {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    });\n  } catch (error) {\n    console.error('Fetching user profile failed:', error);\n    throw error;\n  }\n};\nexport const approvePayment = async (token, paymentId) => {\n  try {\n    return await api.post(`/api/admin/payments/${paymentId}/approve`, {}, {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    });\n  } catch (error) {\n    console.error(`Approving payment ${paymentId} failed:`, error);\n    throw error;\n  }\n};\nexport const rejectPayment = async (token, paymentId) => {\n  try {\n    return await api.post(`/api/admin/payments/${paymentId}/reject`, {}, {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    });\n  } catch (error) {\n    console.error(`Rejecting payment ${paymentId} failed:`, error);\n    throw error;\n  }\n};\nexport default api;","map":{"version":3,"names":["axios","api","create","baseURL","process","env","REACT_APP_API_URL","withCredentials","loginUser","email","accountNumber","password","post","error","console","registerUser","name","surname","idNumber","createPayment","token","paymentData","headers","Authorization","getPaymentHistory","get","getBalanceAndTransactions","getPendingPayments","getUserProfile","approvePayment","paymentId","rejectPayment"],"sources":["C:/Users/lab_services_student/Documents/GitHub/APDS-POE-Customer_portal/frontend/src/api.js"],"sourcesContent":["import axios from 'axios';\r\n\r\nconst api = axios.create({\r\n  baseURL: process.env.REACT_APP_API_URL || 'https://localhost:5000', // Ensure HTTPS is set correctly\r\n  withCredentials: true, // Allows cookies for cross-origin requests if needed\r\n});\r\n\r\n// User Authentication\r\nexport const loginUser = async (email, accountNumber, password) => {\r\n  try {\r\n    return await api.post('/api/auth/login', { email, accountNumber, password });\r\n  } catch (error) {\r\n    console.error('Login failed:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const registerUser = async (name, surname, idNumber, email, password) => {\r\n  try {\r\n    return await api.post('/api/auth/register', { name, surname, idNumber, email, password });\r\n  } catch (error) {\r\n    console.error('Registration failed:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// Customer Actions\r\nexport const createPayment = async (token, paymentData) => {\r\n  try {\r\n    return await api.post('/api/payments', paymentData, {\r\n      headers: { Authorization: `Bearer ${token}` },\r\n    });\r\n  } catch (error) {\r\n    console.error('Payment creation failed:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const getPaymentHistory = async (token) => {\r\n  try {\r\n    return await api.get('/api/payments/history', {\r\n      headers: { Authorization: `Bearer ${token}` },\r\n    });\r\n  } catch (error) {\r\n    console.error('Fetching payment history failed:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// Retrieve balance and transaction history\r\nexport const getBalanceAndTransactions = async (token) => {\r\n  try {\r\n    return await api.get('/api/user/balance', {\r\n      headers: { Authorization: `Bearer ${token}` },\r\n    });\r\n  } catch (error) {\r\n    console.error('Fetching balance and transactions failed:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// Admin Actions\r\nexport const getPendingPayments = async (token) => {\r\n  try {\r\n    return await api.get('/api/admin/payments', {\r\n      headers: { Authorization: `Bearer ${token}` },\r\n    });\r\n  } catch (error) {\r\n    console.error('Fetching pending payments failed:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const getUserProfile = async (token) => {\r\n  try {\r\n    return await api.get('/api/user/profile', {\r\n      headers: { Authorization: `Bearer ${token}` },\r\n    });\r\n  } catch (error) {\r\n    console.error('Fetching user profile failed:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const approvePayment = async (token, paymentId) => {\r\n  try {\r\n    return await api.post(`/api/admin/payments/${paymentId}/approve`, {}, {\r\n      headers: { Authorization: `Bearer ${token}` },\r\n    });\r\n  } catch (error) {\r\n    console.error(`Approving payment ${paymentId} failed:`, error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const rejectPayment = async (token, paymentId) => {\r\n  try {\r\n    return await api.post(`/api/admin/payments/${paymentId}/reject`, {}, {\r\n      headers: { Authorization: `Bearer ${token}` },\r\n    });\r\n  } catch (error) {\r\n    console.error(`Rejecting payment ${paymentId} failed:`, error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport default api;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}